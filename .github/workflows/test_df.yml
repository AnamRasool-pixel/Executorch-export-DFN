name: Test DF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 18 * * 0'

jobs:
  test-df-output:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python: ["3.9"]
        os: ["ubuntu-latest"]
        # python: ["3.7", "3.8", "3.9", "3.10"]
        # os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: Rust cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with: {profile: "minimal", toolchain: "stable"}
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Load cached Poetry installation
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('.github/workflows/test_df.yml') }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Python cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: |
            .venv
            ~/.cache/pip/
          key: venv-${{ matrix.os }}-${{ matrix.python }}-${{ hashFiles('DeepFilterNet/pyproject.toml') }}
      - name: Install build dependencies
        run: pip install maturin
      - name: Install runtime dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != true
        working-directory: DeepFilterNet
        run: poetry install -E eval --no-interaction --no-root
      - name: Install DeepFilterNet
        working-directory: DeepFilterNet
        run: poetry install -E eval --no-interaction
      - name: Run Test
        working-directory: DeepFilterNet
        run: |
          poetry run df/scripts/test_df.py
          # source $VENV
          # python df/scripts/test_df.py
